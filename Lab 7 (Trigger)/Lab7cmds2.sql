USE LAB7;
DROP TABLE IF EXISTS CONCERTS;
DROP TABLE IF EXISTS PERFORMERS;
DROP TABLE IF EXISTS ARENAS;
DROP TABLE IF EXISTS ACTIVITIES;

CREATE TABLE ACTIVITIES (
	ACTIVITYID INT NOT NULL,
	ACTIVITYNAME VARCHAR(40),
	PRIMARY KEY (ACTIVITYID)
);

CREATE TABLE PERFORMERS (
	PERFORMERID  INT NOT NULL,
	PERFORMERNAME VARCHAR(40),
	STREET VARCHAR(40),
	CITY VARCHAR(40),
	STATE VARCHAR(40),
	ZIP INT(6),
	ACTIVITYID INT,
	PRIMARY KEY (PERFORMERID),
	FOREIGN KEY (ACTIVITYID) REFERENCES ACTIVITiES(ACTIVITYID)	
);

CREATE TABLE ARENAS (
	ARENAID INT NOT NULL,
	ARENANAME VARCHAR(40),
	CITY VARCHAR(40),
	ARENACAPACITY VARCHAR(40),
	PRIMARY KEY (ARENAID)
);

CREATE TABLE CONCERTS (
	PERFORMERID INT,
	ARENAID INT,
	CONCERTDATE DATETIME,
	TICKETPRICE INT,
	PRIMARY KEY (PERFORMERID, ARENAID),
	FOREIGN KEY (PERFORMERID) REFERENCES PERFORMERS(PERFORMERID),	
	FOREIGN KEY (ARENAID) REFERENCES ARENAS(ARENAID)	
);


INSERT INTO ACTIVITiES
VALUES (1, "DANCING"),
	(2, "SWIMMING"),
	(3, "ATHLETICS");

INSERT INTO PERFORMERS
VALUES (1, "ASHUTOSH", "THUVAKUDI", "TRICHY", "TAMIL NADU", 620015, 1),
	(2, "ABHSISHEK", "THUVAKUDI", "TRICHY", "TAMIL NADU", 620015, 1),
	(3, "DHRUV", "THUVAKUDI", "TRICHY", "TAMIL NADU", 620015, 2);



DELIMITER //
CREATE TRIGGER DELETEPERFORMER 
BEFORE DELETE 
ON PERFORMERS 
FOR EACH ROW
BEGIN 
    IF (1 = (SELECT COUNT(PERFORMERID)
                    FROM PERFORMERS
                    WHERE PERFORMERS.ACTIVITYID = OLD.ACTIVITYID
                   )
        ) THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT ='DELETION IS NOT ALLOWED!';
    END IF;
END;
//

DELETE FROM PERFORMERS WHERE PERFORMERID=2;